---
metadata:
  labels:
    k8s-app: kube-proxy
    kubernetes.io/managed-by: puppet
spec:
  selector:
    matchLabels:
      k8s-app: kube-proxy
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: kube-proxy
        kubernetes.io/managed-by: puppet
    spec:
      priorityClassName: system-node-critical
      containers:
      - name: kube-proxy
        image: registry.k8s.io/kube-proxy:v1.23.4
        imagePullPolicy: IfNotPresent
        command:
        - "/go-runner"
        - "--log-file=/var/log/kube-proxy.log"
        - "--also-stdout=true"
        - "--"
        - "/usr/local/bin/kube-proxy"
        - "--hostname-override=$(NODE_NAME)"
        - "--config=/var/lib/kube-proxy/kube-proxy.conf"
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: "/var/lib/kube-proxy/kube-proxy.conf"
          name: kube-proxy
          subPath: kube-proxy.conf
          readOnly: true
        - mountPath: "/var/lib/kube-proxy/kubeconfig"
          name: kubeconfig
          subPath: kubeconfig
          readOnly: true
        - mountPath: "/run/xtables.lock"
          name: iptables-lock
          readOnly: false
        - mountPath: "/lib/modules"
          name: lib-modules
          readOnly: true
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
      imagePullSecrets: null
      hostNetwork: true
      serviceAccountName: kube-proxy
      volumes:
      - name: logfile
        hostPath:
          path: "/var/log/kube-proxy.log"
          type: FileOrCreate
      - name: lib-modules
        hostPath:
          path: "/lib/modules"
          type: Directory
      - name: iptables-lock
        hostPath:
          path: "/run/xtables.lock"
          type: FileOrCreate
      - name: kube-proxy
        configMap:
          name: kube-proxy
      - name: kubeconfig
        configMap:
          name: kubeconfig-in-cluster
      tolerations:
      - operator: Exists
      nodeSelector:
        kubernetes.io/os: linux
